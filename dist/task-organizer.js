(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>d});var i=t(537),a=t.n(i),r=t(645),o=t.n(r)()(a());o.push([n.id,"* {\n    font-family: Arial, Helvetica, sans-serif\n}\nbody {\n\n}\n/* styles for header */\n#header {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    margin-left: 1px;\n    width: 98.75vw;\n    background-color: white;\n    position: sticky;\n    top: 0;\n    border: 1px solid #e2e8f0;\n    height: 60px;\n    overflow: hidden;\n    gap: 140px;\n}\n#header > h3 {\n    margin-left: 50px;\n    width: 450px;\n    height: 30px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    white-space: nowrap;\n}\n#nav {\n    display: flex;\n    width: 85%;\n}\n\n#linksList {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    align-items: center;\n    list-style: none;\n    width: 800px;\n    height: 40px;\n}\n.headerLink {\n    display: flex;\n    text-align: center;\n    align-items: center;\n    /*justify-content: right;\n    width: 120px;*/\n    justify-content: center;\n    width: 200px;\n    height: 10px;\n    border-left: 1px solid grey;\n    padding: 10px;\n}\nli + li + li + li {\n    border-right: 1px solid grey;\n    \n}\n/* styles for main content */\n#mainContainer {\n    display: flex;\n    gap: 10px;\n    background-color: #f1f5f9;\n    height: 700px;\n}\n\n.contentBox {\n    display: flex;\n    flex-direction: column;\n    background-color: white;\n    border: 2px solid #e2e8f0;\n    width: 800px;\n    margin-top: 30px;\n    padding-left: 30px;\n    padding-right: 30px;\n    padding-bottom: 30px;\n}\n.homePageLoader {\n\n}\n\n/* styles for profile */\n#profile {\n    width: 400px;\n    display: flex;\n    flex-direction: column;\n    justify-content: start;\n    align-items: start;\n    margin-top: -20px;\n    margin-left: 20px;\n    padding: 50px;\n    margin-right: -110px;\n}\n#profilePhoto {\n    height: 400px;\n}\n\n#profileDescription, #profileName {\n    width: 350px;\n    display: flex;\n    justify-content: center;\n}\n#profileName {\n    font-size: 40px;\n    margin-top: 5px;\n}\n#profileText {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n/* styles for Philosophy */\n\n#italic {\n    font-style: italic;\n}\n\n/* styles for JS portfolio */\n#appButtonContainer {\n    display: flex;\n    gap: 15px;\n}\n.openAppButtons {\n    font-size: 18px;\n    height: 70px;\n    width: 140px;\n    border-radius: 10px;\n}\n\n/* styles for weather App */\n\n#weatherWrapper {\n    border-radius: 5px;\n    background-color: #1e293b;\n    width: 450px;\n    position: absolute;\n    top: 100px;\n}\n\n#weatherHeader,\n#weatherContent {\n    width: 390px;\n}\n\n#weatherHeader {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 20px;\n    gap: 15px;\n    background-color: #1e293b;\n    color: white;\n    height: 15%;\n    border-radius: 5px;\n}\n\n#weatherIcon {\n    height: 43px;\n    filter: invert(100%);\n    -webkit-filter: invert(100%);\n}\n\n#weatherHeaderLogo {\n    display: flex;\n}\n\n#removeWeatherAppBtn {\n    background-color: #1e293b;\n    color: white;\n    font-size: 24px;\n    position: relative;\n    left: 55px;\n    bottom: 20px;\n    border: none;\n    box-shadow: none;\n    background: none;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n    padding-bottom: 3px;\n    padding-left: 7px;\n    padding-right: 7px;\n}\n\n#weatherContent {\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n    justify-content: center;\n    background-color: #93c5fd;\n    padding: 30px;\n    height: 85%;\n    border-bottom-left-radius: 5px;\n    border-bottom-right-radius: 5px;\n}\n\n#weatherContent>div {\n    gap: 10px;\n    height: 7%;\n    display: flex;\n}\n\n#weatherBtn,\n#weatherInput {\n    padding: 0.5rem;\n    border: none;\n    border-radius: 5px;\n    color: inherit;\n    font-family: inherit;\n    font-size: 18px;\n    outline: none;\n    height: 37px;\n}\n#weatherBtn {\n    height: 37px;\n}\n\n#weatherBtn {\n    width: 80px;\n    margin-left: 10px;\n}\n\n#form {\n    gap: 10px;\n}\n\n.searchResultContainer {\n    /*position: absolute;\n    top: 30%;\n    left: 50%;\n    margin-left: -175px;*/\n    background-color: #1e293b;\n    width: 330px;\n    height: 285px;\n    border-radius: 10px;\n    border: solid white 3px;\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    color: #93c5fd;\n    gap: 10px;\n}\n\n.searchResultContainer>h2 {\n    font-size: 36px;\n    margin-bottom: 8px;\n    color: #cbd5e1;\n}\n\n#temp {\n    font-size: 30px;\n    margin-bottom: 8px;\n}\n\n.p-info {\n    color: white;\n    font-size: 18px;\n}\n\n/*styles for battleship*/\n\n#container {\n    position: absolute;\n    background-color: #d6d3d1;\n\n}\n\n#battleShipContainer {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 10px;\n    position: relative;\n}\n\n/*styles for the placement module */\n.placement-module-container {\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 10px;\n    bottom: 0;\n    margin-left: auto;\n    margin-right: auto;\n    width: 800px;\n    height: 660px;\n    background-color: grey;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    padding: 10px;\n    padding-right: 30px;\n    border-radius: 10px;\n    box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px, rgb(51, 51, 51) 0px 0px 0px 3px;\n}\n\n.placementTextBox {\n    height: 10%;\n    margin-top: -11px;\n    margin-bottom: 23px;\n}\n\n.placementTextContent {\n    text-shadow: black 2px 2px;\n    font-size: 40px;\n    color: #22d3ee;\n}\n\n.middleSubcontainer,\n.rightInfoSubcontainer {\n    display: flex;\n    align-items: center;\n    padding: 10px;\n}\n\n.middleSubcontainer {\n    gap: 30px;\n}\n\n.rightInfoSubcontainer {\n    gap: 25px;\n    flex-direction: column;\n    align-items: center;\n}\n\n.rightInfoButtonsContainer {\n    display: flex;\n    flex-direction: row;\n    gap: 40px;\n    padding: 5px;\n}\n\n.bottomSubcontainer {\n    display: flex;\n    gap: 55px;\n    height: 25%;\n    margin-top: 20px;\n\n}\n\n.placementInstructionBox {\n    background-color: #d6d3d1;\n    box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px, rgb(51, 51, 51) 0px 0px 0px 3px;\n    padding-left: 15px;\n    padding-right: 15px;\n    border-radius: 20px;\n    padding-bottom: 5px;\n}\n\n.headingContainer {\n    display: flex;\n    justify-content: center;\n    margin-bottom: -20px;\n}\n\n.shipAllClassesContainer {\n    display: flex;\n    flex-direction: row;\n    grid-template-columns: repeat(5, 1fr);\n    background-color: rgba(0, 0, 255, 0);\n    gap: 20px;\n    width: 400px;\n\n}\n\n.singleShipClassContainer {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.ship {\n    display: flex;\n    gap: 1px;\n}\n\n.shipAlt {\n    display: flex;\n    flex-direction: column;\n    gap: 1px;\n    border: solid black 2px;\n}\n\n/*styles for the two grids and coordinates */\n.doubleBoardContainer {\n    display: flex;\n    gap: 175px;\n    padding: 10px;\n}\n\n.singleBoardContainer {\n    display: flex;\n    flex-direction: column;\n}\n\n.xCoordinateContainer {\n    display: flex;\n    gap: 1px;\n    margin-left: 35px;\n    margin-bottom: -10px;\n}\n\n.yCoordinateContainer {\n    display: flex;\n    flex-direction: column;\n    gap: 1px;\n    margin-top: 10px;\n}\n\n.leftSquare {\n    display: flex;\n    justify-content: center;\n}\n\n.leftSquare,\n.upperSquare {\n    height: 35px;\n    width: 35px;\n    display: flex;\n    justify-content: center;\n}\n\n.subcontainer {\n    display: flex;\n}\n\n.placementSquare {\n    height: 35px;\n    width: 35px;\n    background-color: red;\n    font-size: 12px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    opacity: 1;\n}\n\n.square,\n.aiSquare {\n    border: solid black;\n    color: black;\n    font-size: 12px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.square:hover,\n.aiSquare:hover,\n.placementSquare:hover {\n    border: solid black;\n    color: black;\n    font-size: 12px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: #cbd5e1;\n}\n\n.squareContainer {}\n\n.grid-container {\n    height: 350px;\n    width: 350px;\n    display: grid;\n    grid-template-columns: repeat(10, 35px);\n    grid-template-rows: repeat(10, 35px);\n    grid-auto-flow: column;\n    gap: 1px;\n}\n\n/* styles for score card */\n.singleBoardScoreContainer {\n    display: flex;\n    gap: 5px;\n    justify-content: left;\n}\n\n/*styles for game controller hud*/\n.scoreKeeperContainer {\n    display: flex;\n    gap: 390px;\n    text-shadow: #22d3ee 2px 2px;\n\n}\n\n.placementButton {\n    height: 60px;\n    width: 120px;\n    font-size: 20px;\n    border-radius: 20px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: #22d3ee;\n    box-shadow: rgba(6, 24, 44, 0.4) 0px 0px 0px 2px, rgba(6, 24, 44, 0.65) 0px 4px 6px -1px, rgba(255, 255, 255, 0.08) 0px 1px 0px inset;\n}\n\n.buttonContainer {\n    display: flex;\n    gap: 15px;\n    justify-content: center;\n}\n\n.formContainer {\n    display: flex;\n    justify-content: center;\n    gap: 5px;\n    margin: 10px;\n}\n\n.winnerCard {\n    background-color: #dc2626;\n    box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px, rgb(51, 51, 51) 0px 0px 0px 3px;\n    border-radius: 20px;\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 10px;\n    bottom: 0;\n    margin-left: auto;\n    margin-right: auto;\n    height: 276px;\n    width: 350px;\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    justify-content: center;\n    align-items: center;\n}\n\n.winnerAnnouncement {\n    font-size: 80px;\n}\n\n\n/*styles for toDoList / organizer */\n\n#body {\n    padding: 0;\n    margin: 0;\n    font-family: Arial, sans-serif;\n    height: 100%;\n    /*overflow: hidden*/\n}\n\n#content {\n    display: flex;\n}\n\n/*header*/\n#headerContainer {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    background-color: #5eead4;\n    color: white;\n    font-size: 30px;\n    height: 60px;\n    width: 100%;\n}\n\n.leftHeaderContent {\n    display: flex;\n    align-items: center;\n    height: 30px;\n    padding: 5px;\n    gap: 5px;\n    margin-left: 40px;\n}\n#organizerRightHeaderContent {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n}\n\n.toDo {\n    display: flex;\n    align-items: center;\n}\n\n.headerIcon {\n    height: 35px;\n    filter: brightness(0) invert(1);\n}\n\n#removeOrgnizerBtn {\n    background-color: white;\n    color: #5eead4;\n    border-radius: 10px;\n    margin-right: 10px;\n    font-size: 32px;\n    height: 40px;\n    box-shadow: none;\n    text-align: center;\n    padding-bottom: 40px;\n    padding-left: 7px;\n    padding-right: 7px;\n}\n\n\n/*sidebar*/\n.sidebar {\n    background-color: #f8fafc;\n    height: 100vh;\n    width: 21%;\n    display: flex;\n    flex-direction: column;\n    padding-top: 40px;\n    font-size: 20px;\n\n}\n\n.sidebarAddTaskButton {\n    display: flex;\n    justify-content: center;\n    width: 100%;\n    padding-bottom: 15px;\n}\n\n.createTask {\n    height: 70px;\n    width: 200px;\n    border-radius: 20px;\n    font-size: 25px;\n}\n\n.sidebarIntegratedItem {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding-left: 20px;\n    padding-right: 25px;\n}\n\n.sidebarItemSelected {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding-left: 10px;\n    background-color: #5eead4;\n    color: white;\n}\n\n.sidebarIntegratedItem2 {\n    display: flex;\n    flex-direction: column;\n}\n\n.sideBarRightComponentButtonContainer {\n    width: 30px;\n    height: 30px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: #f8fafc;\n}\n\n.sideBarRightComponentButton {\n    width: 30px;\n    height: 30px;\n}\n\n.sidebarListItemContainer {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding-left: 35px;\n    padding-right: 20px;\n}\n\n.sidebarListItemContainerSelected {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding-left: 35px;\n    padding-right: 20px;\n    background-color: #5eead4;\n    color: white;\n}\n\n.sidebarListIconButton {\n    width: 30px;\n    height: 30px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.sidebarListIcon {\n    height: 25px;\n}\n\n/* new Task Popup */\n.newTaskCard {\n    position: absolute;\n    margin-left: auto;\n    margin-right: auto;\n    left: 250px;\n    right: 0;\n    margin-top: auto;\n    margin-bottom: auto;\n    top: 0;\n    bottom: 0;\n    text-align: center;\n    height: 230px;\n    width: 600px;\n    border: solid black;\n    border-radius: 20px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    box-shadow: 5px 5px 5px black;\n    font-size: 25px;\n}\n\n.taskCardTextBorder {\n    display: flex;\n    flex-direction: column;\n    width: 75%;\n    align-items: center;\n    gap: 25px;\n    margin-bottom: 20px;\n}\n\n.taskInfoFirstRow {\n    display: flex;\n    width: 80%;\n    justify-content: center;\n    gap: 20px;\n}\n\n.taskInfoItemContainer {\n    display: flex;\n    gap: 5px;\n}\n\n.cardButtonIntegrator {\n    display: flex;\n    gap: 20px;\n}\n\n.taskCardButton {\n    width: 130px;\n    height: 50px;\n    border-radius: 20px;\n    border: solid black;\n    font-size: 20px;\n}\n\n#addTask {\n    background-color: #5eead4;\n    color: white;\n}\n\n#title,\n#date,\n#list {\n    font-size: 20px;\n}\n\n/* new List Popup */\n.newListCard {\n    position: absolute;\n    margin-left: auto;\n    margin-right: auto;\n    left: 250px;\n    right: 0;\n    margin-top: auto;\n    margin-bottom: auto;\n    top: 0;\n    bottom: 0;\n    text-align: center;\n    height: 230px;\n    width: 450px;\n    border: solid black;\n    border-radius: 20px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    box-shadow: 5px 5px 5px black;\n    gap: 35px;\n}\n\n.cardTextBorder {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n}\n\n#listName {\n    height: 30px;\n    width: 200px;\n    font-size: 20px;\n}\n\n#listNameLabel {\n    font-size: 20px;\n}\n\n.newListCardButton {\n    width: 130px;\n    height: 50px;\n    border-radius: 20px;\n    border: solid black;\n    font-size: 20px;\n}\n\n#listAdd {\n    background-color: #5eead4;\n    color: white;\n}\n\n/* main list content */\n\n.mainContainer {\n    width: 79%\n}\n\n.integratedItem {\n    padding-top: 20px;\n    padding-left: 90px;\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    width: 90%;\n\n}\n\n.titleContainer {}\n\n.listContentContainer {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    width: 100%;\n}\n\n.listItemContainer {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: 60%;\n    padding-left: 20px;\n    padding-right: 20px;\n    box-shadow: 0px 1px 0px 0px rgba(0, 0, 0, 0.3);\n    padding-bottom: 5px;\n}\n\n.listItemIconContainer {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n}\n\n.listItemIconContainer>button {\n    width: 30px;\n    height: 30px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.listItemIconContainer>button>img {\n    width: 25px;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI;AACJ;AACA;;AAEA;AACA,sBAAsB;AACtB;IACI,aAAa;IACb,mBAAmB;IACnB,8BAA8B;IAC9B,gBAAgB;IAChB,cAAc;IACd,uBAAuB;IACvB,gBAAgB;IAChB,MAAM;IACN,yBAAyB;IACzB,YAAY;IACZ,gBAAgB;IAChB,UAAU;AACd;AACA;IACI,iBAAiB;IACjB,YAAY;IACZ,YAAY;IACZ,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,mBAAmB;AACvB;AACA;IACI,aAAa;IACb,UAAU;AACd;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,6BAA6B;IAC7B,mBAAmB;IACnB,gBAAgB;IAChB,YAAY;IACZ,YAAY;AAChB;AACA;IACI,aAAa;IACb,kBAAkB;IAClB,mBAAmB;IACnB;kBACc;IACd,uBAAuB;IACvB,YAAY;IACZ,YAAY;IACZ,2BAA2B;IAC3B,aAAa;AACjB;AACA;IACI,4BAA4B;;AAEhC;AACA,4BAA4B;AAC5B;IACI,aAAa;IACb,SAAS;IACT,yBAAyB;IACzB,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,yBAAyB;IACzB,YAAY;IACZ,gBAAgB;IAChB,kBAAkB;IAClB,mBAAmB;IACnB,oBAAoB;AACxB;AACA;;AAEA;;AAEA,uBAAuB;AACvB;IACI,YAAY;IACZ,aAAa;IACb,sBAAsB;IACtB,sBAAsB;IACtB,kBAAkB;IAClB,iBAAiB;IACjB,iBAAiB;IACjB,aAAa;IACb,oBAAoB;AACxB;AACA;IACI,aAAa;AACjB;;AAEA;IACI,YAAY;IACZ,aAAa;IACb,uBAAuB;AAC3B;AACA;IACI,eAAe;IACf,eAAe;AACnB;AACA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA,0BAA0B;;AAE1B;IACI,kBAAkB;AACtB;;AAEA,4BAA4B;AAC5B;IACI,aAAa;IACb,SAAS;AACb;AACA;IACI,eAAe;IACf,YAAY;IACZ,YAAY;IACZ,mBAAmB;AACvB;;AAEA,2BAA2B;;AAE3B;IACI,kBAAkB;IAClB,yBAAyB;IACzB,YAAY;IACZ,kBAAkB;IAClB,UAAU;AACd;;AAEA;;IAEI,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,aAAa;IACb,SAAS;IACT,yBAAyB;IACzB,YAAY;IACZ,WAAW;IACX,kBAAkB;AACtB;;AAEA;IACI,YAAY;IACZ,oBAAoB;IACpB,4BAA4B;AAChC;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,yBAAyB;IACzB,YAAY;IACZ,eAAe;IACf,kBAAkB;IAClB,UAAU;IACV,YAAY;IACZ,YAAY;IACZ,gBAAgB;IAChB,gBAAgB;IAChB,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,kBAAkB;IAClB,mBAAmB;IACnB,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,uBAAuB;IACvB,yBAAyB;IACzB,aAAa;IACb,WAAW;IACX,8BAA8B;IAC9B,+BAA+B;AACnC;;AAEA;IACI,SAAS;IACT,UAAU;IACV,aAAa;AACjB;;AAEA;;IAEI,eAAe;IACf,YAAY;IACZ,kBAAkB;IAClB,cAAc;IACd,oBAAoB;IACpB,eAAe;IACf,aAAa;IACb,YAAY;AAChB;AACA;IACI,YAAY;AAChB;;AAEA;IACI,WAAW;IACX,iBAAiB;AACrB;;AAEA;IACI,SAAS;AACb;;AAEA;IACI;;;yBAGqB;IACrB,yBAAyB;IACzB,YAAY;IACZ,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,4CAA4C;;IAE5C,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,cAAc;IACd,SAAS;AACb;;AAEA;IACI,eAAe;IACf,kBAAkB;IAClB,cAAc;AAClB;;AAEA;IACI,eAAe;IACf,kBAAkB;AACtB;;AAEA;IACI,YAAY;IACZ,eAAe;AACnB;;AAEA,wBAAwB;;AAExB;IACI,kBAAkB;IAClB,yBAAyB;;AAE7B;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,YAAY;IACZ,kBAAkB;AACtB;;AAEA,mCAAmC;AACnC;IACI,kBAAkB;IAClB,OAAO;IACP,QAAQ;IACR,SAAS;IACT,SAAS;IACT,iBAAiB;IACjB,kBAAkB;IAClB,YAAY;IACZ,aAAa;IACb,sBAAsB;IACtB,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,aAAa;IACb,mBAAmB;IACnB,mBAAmB;IACnB,4EAA4E;AAChF;;AAEA;IACI,WAAW;IACX,iBAAiB;IACjB,mBAAmB;AACvB;;AAEA;IACI,0BAA0B;IAC1B,eAAe;IACf,cAAc;AAClB;;AAEA;;IAEI,aAAa;IACb,mBAAmB;IACnB,aAAa;AACjB;;AAEA;IACI,SAAS;AACb;;AAEA;IACI,SAAS;IACT,sBAAsB;IACtB,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,SAAS;IACT,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,SAAS;IACT,WAAW;IACX,gBAAgB;;AAEpB;;AAEA;IACI,yBAAyB;IACzB,4EAA4E;IAC5E,kBAAkB;IAClB,mBAAmB;IACnB,mBAAmB;IACnB,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,oBAAoB;AACxB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,qCAAqC;IACrC,oCAAoC;IACpC,SAAS;IACT,YAAY;;AAEhB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,aAAa;IACb,QAAQ;AACZ;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,QAAQ;IACR,uBAAuB;AAC3B;;AAEA,4CAA4C;AAC5C;IACI,aAAa;IACb,UAAU;IACV,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,QAAQ;IACR,iBAAiB;IACjB,oBAAoB;AACxB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,QAAQ;IACR,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,uBAAuB;AAC3B;;AAEA;;IAEI,YAAY;IACZ,WAAW;IACX,aAAa;IACb,uBAAuB;AAC3B;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,qBAAqB;IACrB,eAAe;IACf,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,UAAU;AACd;;AAEA;;IAEI,mBAAmB;IACnB,YAAY;IACZ,eAAe;IACf,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;;;IAGI,mBAAmB;IACnB,YAAY;IACZ,eAAe;IACf,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,yBAAyB;AAC7B;;AAEA,kBAAkB;;AAElB;IACI,aAAa;IACb,YAAY;IACZ,aAAa;IACb,uCAAuC;IACvC,oCAAoC;IACpC,sBAAsB;IACtB,QAAQ;AACZ;;AAEA,0BAA0B;AAC1B;IACI,aAAa;IACb,QAAQ;IACR,qBAAqB;AACzB;;AAEA,iCAAiC;AACjC;IACI,aAAa;IACb,UAAU;IACV,4BAA4B;;AAEhC;;AAEA;IACI,YAAY;IACZ,YAAY;IACZ,eAAe;IACf,mBAAmB;IACnB,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,yBAAyB;IACzB,qIAAqI;AACzI;;AAEA;IACI,aAAa;IACb,SAAS;IACT,uBAAuB;AAC3B;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,QAAQ;IACR,YAAY;AAChB;;AAEA;IACI,yBAAyB;IACzB,4EAA4E;IAC5E,mBAAmB;IACnB,kBAAkB;IAClB,OAAO;IACP,QAAQ;IACR,SAAS;IACT,SAAS;IACT,iBAAiB;IACjB,kBAAkB;IAClB,aAAa;IACb,YAAY;IACZ,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,eAAe;AACnB;;;AAGA,mCAAmC;;AAEnC;IACI,UAAU;IACV,SAAS;IACT,8BAA8B;IAC9B,YAAY;IACZ,mBAAmB;AACvB;;AAEA;IACI,aAAa;AACjB;;AAEA,SAAS;AACT;IACI,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;IACnB,yBAAyB;IACzB,YAAY;IACZ,eAAe;IACf,YAAY;IACZ,WAAW;AACf;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,YAAY;IACZ,YAAY;IACZ,QAAQ;IACR,iBAAiB;AACrB;AACA;IACI,aAAa;IACb,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,YAAY;IACZ,+BAA+B;AACnC;;AAEA;IACI,uBAAuB;IACvB,cAAc;IACd,mBAAmB;IACnB,kBAAkB;IAClB,eAAe;IACf,YAAY;IACZ,gBAAgB;IAChB,kBAAkB;IAClB,oBAAoB;IACpB,iBAAiB;IACjB,kBAAkB;AACtB;;;AAGA,UAAU;AACV;IACI,yBAAyB;IACzB,aAAa;IACb,UAAU;IACV,aAAa;IACb,sBAAsB;IACtB,iBAAiB;IACjB,eAAe;;AAEnB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,WAAW;IACX,oBAAoB;AACxB;;AAEA;IACI,YAAY;IACZ,YAAY;IACZ,mBAAmB;IACnB,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;IACnB,kBAAkB;IAClB,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;IACnB,kBAAkB;IAClB,yBAAyB;IACzB,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,yBAAyB;AAC7B;;AAEA;IACI,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;IACnB,kBAAkB;IAClB,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;IACnB,kBAAkB;IAClB,mBAAmB;IACnB,yBAAyB;IACzB,YAAY;AAChB;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,YAAY;AAChB;;AAEA,mBAAmB;AACnB;IACI,kBAAkB;IAClB,iBAAiB;IACjB,kBAAkB;IAClB,WAAW;IACX,QAAQ;IACR,gBAAgB;IAChB,mBAAmB;IACnB,MAAM;IACN,SAAS;IACT,kBAAkB;IAClB,aAAa;IACb,YAAY;IACZ,mBAAmB;IACnB,mBAAmB;IACnB,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,6BAA6B;IAC7B,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,UAAU;IACV,mBAAmB;IACnB,SAAS;IACT,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,UAAU;IACV,uBAAuB;IACvB,SAAS;AACb;;AAEA;IACI,aAAa;IACb,QAAQ;AACZ;;AAEA;IACI,aAAa;IACb,SAAS;AACb;;AAEA;IACI,YAAY;IACZ,YAAY;IACZ,mBAAmB;IACnB,mBAAmB;IACnB,eAAe;AACnB;;AAEA;IACI,yBAAyB;IACzB,YAAY;AAChB;;AAEA;;;IAGI,eAAe;AACnB;;AAEA,mBAAmB;AACnB;IACI,kBAAkB;IAClB,iBAAiB;IACjB,kBAAkB;IAClB,WAAW;IACX,QAAQ;IACR,gBAAgB;IAChB,mBAAmB;IACnB,MAAM;IACN,SAAS;IACT,kBAAkB;IAClB,aAAa;IACb,YAAY;IACZ,mBAAmB;IACnB,mBAAmB;IACnB,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,6BAA6B;IAC7B,SAAS;AACb;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,YAAY;IACZ,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,YAAY;IACZ,YAAY;IACZ,mBAAmB;IACnB,mBAAmB;IACnB,eAAe;AACnB;;AAEA;IACI,yBAAyB;IACzB,YAAY;AAChB;;AAEA,sBAAsB;;AAEtB;IACI;AACJ;;AAEA;IACI,iBAAiB;IACjB,kBAAkB;IAClB,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,UAAU;;AAEd;;AAEA,iBAAiB;;AAEjB;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,WAAW;AACf;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,8BAA8B;IAC9B,UAAU;IACV,kBAAkB;IAClB,mBAAmB;IACnB,8CAA8C;IAC9C,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,WAAW;AACf",sourcesContent:["* {\n    font-family: Arial, Helvetica, sans-serif\n}\nbody {\n\n}\n/* styles for header */\n#header {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    margin-left: 1px;\n    width: 98.75vw;\n    background-color: white;\n    position: sticky;\n    top: 0;\n    border: 1px solid #e2e8f0;\n    height: 60px;\n    overflow: hidden;\n    gap: 140px;\n}\n#header > h3 {\n    margin-left: 50px;\n    width: 450px;\n    height: 30px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    white-space: nowrap;\n}\n#nav {\n    display: flex;\n    width: 85%;\n}\n\n#linksList {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    align-items: center;\n    list-style: none;\n    width: 800px;\n    height: 40px;\n}\n.headerLink {\n    display: flex;\n    text-align: center;\n    align-items: center;\n    /*justify-content: right;\n    width: 120px;*/\n    justify-content: center;\n    width: 200px;\n    height: 10px;\n    border-left: 1px solid grey;\n    padding: 10px;\n}\nli + li + li + li {\n    border-right: 1px solid grey;\n    \n}\n/* styles for main content */\n#mainContainer {\n    display: flex;\n    gap: 10px;\n    background-color: #f1f5f9;\n    height: 700px;\n}\n\n.contentBox {\n    display: flex;\n    flex-direction: column;\n    background-color: white;\n    border: 2px solid #e2e8f0;\n    width: 800px;\n    margin-top: 30px;\n    padding-left: 30px;\n    padding-right: 30px;\n    padding-bottom: 30px;\n}\n.homePageLoader {\n\n}\n\n/* styles for profile */\n#profile {\n    width: 400px;\n    display: flex;\n    flex-direction: column;\n    justify-content: start;\n    align-items: start;\n    margin-top: -20px;\n    margin-left: 20px;\n    padding: 50px;\n    margin-right: -110px;\n}\n#profilePhoto {\n    height: 400px;\n}\n\n#profileDescription, #profileName {\n    width: 350px;\n    display: flex;\n    justify-content: center;\n}\n#profileName {\n    font-size: 40px;\n    margin-top: 5px;\n}\n#profileText {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n/* styles for Philosophy */\n\n#italic {\n    font-style: italic;\n}\n\n/* styles for JS portfolio */\n#appButtonContainer {\n    display: flex;\n    gap: 15px;\n}\n.openAppButtons {\n    font-size: 18px;\n    height: 70px;\n    width: 140px;\n    border-radius: 10px;\n}\n\n/* styles for weather App */\n\n#weatherWrapper {\n    border-radius: 5px;\n    background-color: #1e293b;\n    width: 450px;\n    position: absolute;\n    top: 100px;\n}\n\n#weatherHeader,\n#weatherContent {\n    width: 390px;\n}\n\n#weatherHeader {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 20px;\n    gap: 15px;\n    background-color: #1e293b;\n    color: white;\n    height: 15%;\n    border-radius: 5px;\n}\n\n#weatherIcon {\n    height: 43px;\n    filter: invert(100%);\n    -webkit-filter: invert(100%);\n}\n\n#weatherHeaderLogo {\n    display: flex;\n}\n\n#removeWeatherAppBtn {\n    background-color: #1e293b;\n    color: white;\n    font-size: 24px;\n    position: relative;\n    left: 55px;\n    bottom: 20px;\n    border: none;\n    box-shadow: none;\n    background: none;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n    padding-bottom: 3px;\n    padding-left: 7px;\n    padding-right: 7px;\n}\n\n#weatherContent {\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n    justify-content: center;\n    background-color: #93c5fd;\n    padding: 30px;\n    height: 85%;\n    border-bottom-left-radius: 5px;\n    border-bottom-right-radius: 5px;\n}\n\n#weatherContent>div {\n    gap: 10px;\n    height: 7%;\n    display: flex;\n}\n\n#weatherBtn,\n#weatherInput {\n    padding: 0.5rem;\n    border: none;\n    border-radius: 5px;\n    color: inherit;\n    font-family: inherit;\n    font-size: 18px;\n    outline: none;\n    height: 37px;\n}\n#weatherBtn {\n    height: 37px;\n}\n\n#weatherBtn {\n    width: 80px;\n    margin-left: 10px;\n}\n\n#form {\n    gap: 10px;\n}\n\n.searchResultContainer {\n    /*position: absolute;\n    top: 30%;\n    left: 50%;\n    margin-left: -175px;*/\n    background-color: #1e293b;\n    width: 330px;\n    height: 285px;\n    border-radius: 10px;\n    border: solid white 3px;\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    color: #93c5fd;\n    gap: 10px;\n}\n\n.searchResultContainer>h2 {\n    font-size: 36px;\n    margin-bottom: 8px;\n    color: #cbd5e1;\n}\n\n#temp {\n    font-size: 30px;\n    margin-bottom: 8px;\n}\n\n.p-info {\n    color: white;\n    font-size: 18px;\n}\n\n/*styles for battleship*/\n\n#container {\n    position: absolute;\n    background-color: #d6d3d1;\n\n}\n\n#battleShipContainer {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: 10px;\n    position: relative;\n}\n\n/*styles for the placement module */\n.placement-module-container {\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 10px;\n    bottom: 0;\n    margin-left: auto;\n    margin-right: auto;\n    width: 800px;\n    height: 660px;\n    background-color: grey;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    padding: 10px;\n    padding-right: 30px;\n    border-radius: 10px;\n    box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px, rgb(51, 51, 51) 0px 0px 0px 3px;\n}\n\n.placementTextBox {\n    height: 10%;\n    margin-top: -11px;\n    margin-bottom: 23px;\n}\n\n.placementTextContent {\n    text-shadow: black 2px 2px;\n    font-size: 40px;\n    color: #22d3ee;\n}\n\n.middleSubcontainer,\n.rightInfoSubcontainer {\n    display: flex;\n    align-items: center;\n    padding: 10px;\n}\n\n.middleSubcontainer {\n    gap: 30px;\n}\n\n.rightInfoSubcontainer {\n    gap: 25px;\n    flex-direction: column;\n    align-items: center;\n}\n\n.rightInfoButtonsContainer {\n    display: flex;\n    flex-direction: row;\n    gap: 40px;\n    padding: 5px;\n}\n\n.bottomSubcontainer {\n    display: flex;\n    gap: 55px;\n    height: 25%;\n    margin-top: 20px;\n\n}\n\n.placementInstructionBox {\n    background-color: #d6d3d1;\n    box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px, rgb(51, 51, 51) 0px 0px 0px 3px;\n    padding-left: 15px;\n    padding-right: 15px;\n    border-radius: 20px;\n    padding-bottom: 5px;\n}\n\n.headingContainer {\n    display: flex;\n    justify-content: center;\n    margin-bottom: -20px;\n}\n\n.shipAllClassesContainer {\n    display: flex;\n    flex-direction: row;\n    grid-template-columns: repeat(5, 1fr);\n    background-color: rgba(0, 0, 255, 0);\n    gap: 20px;\n    width: 400px;\n\n}\n\n.singleShipClassContainer {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.ship {\n    display: flex;\n    gap: 1px;\n}\n\n.shipAlt {\n    display: flex;\n    flex-direction: column;\n    gap: 1px;\n    border: solid black 2px;\n}\n\n/*styles for the two grids and coordinates */\n.doubleBoardContainer {\n    display: flex;\n    gap: 175px;\n    padding: 10px;\n}\n\n.singleBoardContainer {\n    display: flex;\n    flex-direction: column;\n}\n\n.xCoordinateContainer {\n    display: flex;\n    gap: 1px;\n    margin-left: 35px;\n    margin-bottom: -10px;\n}\n\n.yCoordinateContainer {\n    display: flex;\n    flex-direction: column;\n    gap: 1px;\n    margin-top: 10px;\n}\n\n.leftSquare {\n    display: flex;\n    justify-content: center;\n}\n\n.leftSquare,\n.upperSquare {\n    height: 35px;\n    width: 35px;\n    display: flex;\n    justify-content: center;\n}\n\n.subcontainer {\n    display: flex;\n}\n\n.placementSquare {\n    height: 35px;\n    width: 35px;\n    background-color: red;\n    font-size: 12px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    opacity: 1;\n}\n\n.square,\n.aiSquare {\n    border: solid black;\n    color: black;\n    font-size: 12px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.square:hover,\n.aiSquare:hover,\n.placementSquare:hover {\n    border: solid black;\n    color: black;\n    font-size: 12px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: #cbd5e1;\n}\n\n.squareContainer {}\n\n.grid-container {\n    height: 350px;\n    width: 350px;\n    display: grid;\n    grid-template-columns: repeat(10, 35px);\n    grid-template-rows: repeat(10, 35px);\n    grid-auto-flow: column;\n    gap: 1px;\n}\n\n/* styles for score card */\n.singleBoardScoreContainer {\n    display: flex;\n    gap: 5px;\n    justify-content: left;\n}\n\n/*styles for game controller hud*/\n.scoreKeeperContainer {\n    display: flex;\n    gap: 390px;\n    text-shadow: #22d3ee 2px 2px;\n\n}\n\n.placementButton {\n    height: 60px;\n    width: 120px;\n    font-size: 20px;\n    border-radius: 20px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: #22d3ee;\n    box-shadow: rgba(6, 24, 44, 0.4) 0px 0px 0px 2px, rgba(6, 24, 44, 0.65) 0px 4px 6px -1px, rgba(255, 255, 255, 0.08) 0px 1px 0px inset;\n}\n\n.buttonContainer {\n    display: flex;\n    gap: 15px;\n    justify-content: center;\n}\n\n.formContainer {\n    display: flex;\n    justify-content: center;\n    gap: 5px;\n    margin: 10px;\n}\n\n.winnerCard {\n    background-color: #dc2626;\n    box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px, rgb(51, 51, 51) 0px 0px 0px 3px;\n    border-radius: 20px;\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 10px;\n    bottom: 0;\n    margin-left: auto;\n    margin-right: auto;\n    height: 276px;\n    width: 350px;\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    justify-content: center;\n    align-items: center;\n}\n\n.winnerAnnouncement {\n    font-size: 80px;\n}\n\n\n/*styles for toDoList / organizer */\n\n#body {\n    padding: 0;\n    margin: 0;\n    font-family: Arial, sans-serif;\n    height: 100%;\n    /*overflow: hidden*/\n}\n\n#content {\n    display: flex;\n}\n\n/*header*/\n#headerContainer {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    background-color: #5eead4;\n    color: white;\n    font-size: 30px;\n    height: 60px;\n    width: 100%;\n}\n\n.leftHeaderContent {\n    display: flex;\n    align-items: center;\n    height: 30px;\n    padding: 5px;\n    gap: 5px;\n    margin-left: 40px;\n}\n#organizerRightHeaderContent {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n}\n\n.toDo {\n    display: flex;\n    align-items: center;\n}\n\n.headerIcon {\n    height: 35px;\n    filter: brightness(0) invert(1);\n}\n\n#removeOrgnizerBtn {\n    background-color: white;\n    color: #5eead4;\n    border-radius: 10px;\n    margin-right: 10px;\n    font-size: 32px;\n    height: 40px;\n    box-shadow: none;\n    text-align: center;\n    padding-bottom: 40px;\n    padding-left: 7px;\n    padding-right: 7px;\n}\n\n\n/*sidebar*/\n.sidebar {\n    background-color: #f8fafc;\n    height: 100vh;\n    width: 21%;\n    display: flex;\n    flex-direction: column;\n    padding-top: 40px;\n    font-size: 20px;\n\n}\n\n.sidebarAddTaskButton {\n    display: flex;\n    justify-content: center;\n    width: 100%;\n    padding-bottom: 15px;\n}\n\n.createTask {\n    height: 70px;\n    width: 200px;\n    border-radius: 20px;\n    font-size: 25px;\n}\n\n.sidebarIntegratedItem {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding-left: 20px;\n    padding-right: 25px;\n}\n\n.sidebarItemSelected {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding-left: 10px;\n    background-color: #5eead4;\n    color: white;\n}\n\n.sidebarIntegratedItem2 {\n    display: flex;\n    flex-direction: column;\n}\n\n.sideBarRightComponentButtonContainer {\n    width: 30px;\n    height: 30px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: #f8fafc;\n}\n\n.sideBarRightComponentButton {\n    width: 30px;\n    height: 30px;\n}\n\n.sidebarListItemContainer {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding-left: 35px;\n    padding-right: 20px;\n}\n\n.sidebarListItemContainerSelected {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding-left: 35px;\n    padding-right: 20px;\n    background-color: #5eead4;\n    color: white;\n}\n\n.sidebarListIconButton {\n    width: 30px;\n    height: 30px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.sidebarListIcon {\n    height: 25px;\n}\n\n/* new Task Popup */\n.newTaskCard {\n    position: absolute;\n    margin-left: auto;\n    margin-right: auto;\n    left: 250px;\n    right: 0;\n    margin-top: auto;\n    margin-bottom: auto;\n    top: 0;\n    bottom: 0;\n    text-align: center;\n    height: 230px;\n    width: 600px;\n    border: solid black;\n    border-radius: 20px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    box-shadow: 5px 5px 5px black;\n    font-size: 25px;\n}\n\n.taskCardTextBorder {\n    display: flex;\n    flex-direction: column;\n    width: 75%;\n    align-items: center;\n    gap: 25px;\n    margin-bottom: 20px;\n}\n\n.taskInfoFirstRow {\n    display: flex;\n    width: 80%;\n    justify-content: center;\n    gap: 20px;\n}\n\n.taskInfoItemContainer {\n    display: flex;\n    gap: 5px;\n}\n\n.cardButtonIntegrator {\n    display: flex;\n    gap: 20px;\n}\n\n.taskCardButton {\n    width: 130px;\n    height: 50px;\n    border-radius: 20px;\n    border: solid black;\n    font-size: 20px;\n}\n\n#addTask {\n    background-color: #5eead4;\n    color: white;\n}\n\n#title,\n#date,\n#list {\n    font-size: 20px;\n}\n\n/* new List Popup */\n.newListCard {\n    position: absolute;\n    margin-left: auto;\n    margin-right: auto;\n    left: 250px;\n    right: 0;\n    margin-top: auto;\n    margin-bottom: auto;\n    top: 0;\n    bottom: 0;\n    text-align: center;\n    height: 230px;\n    width: 450px;\n    border: solid black;\n    border-radius: 20px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    box-shadow: 5px 5px 5px black;\n    gap: 35px;\n}\n\n.cardTextBorder {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n}\n\n#listName {\n    height: 30px;\n    width: 200px;\n    font-size: 20px;\n}\n\n#listNameLabel {\n    font-size: 20px;\n}\n\n.newListCardButton {\n    width: 130px;\n    height: 50px;\n    border-radius: 20px;\n    border: solid black;\n    font-size: 20px;\n}\n\n#listAdd {\n    background-color: #5eead4;\n    color: white;\n}\n\n/* main list content */\n\n.mainContainer {\n    width: 79%\n}\n\n.integratedItem {\n    padding-top: 20px;\n    padding-left: 90px;\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    width: 90%;\n\n}\n\n.titleContainer {}\n\n.listContentContainer {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    width: 100%;\n}\n\n.listItemContainer {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: 60%;\n    padding-left: 20px;\n    padding-right: 20px;\n    box-shadow: 0px 1px 0px 0px rgba(0, 0, 0, 0.3);\n    padding-bottom: 5px;\n}\n\n.listItemIconContainer {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n}\n\n.listItemIconContainer>button {\n    width: 30px;\n    height: 30px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.listItemIconContainer>button>img {\n    width: 25px;\n}"],sourceRoot:""}]);const d=o},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",i=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),i&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),i&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,i,a,r){"string"==typeof n&&(n=[[null,n,void 0]]);var o={};if(i)for(var d=0;d<this.length;d++){var A=this[d][0];null!=A&&(o[A]=!0)}for(var s=0;s<n.length;s++){var l=[].concat(n[s]);i&&o[l[0]]||(void 0!==r&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=r),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),r="/*# ".concat(a," */"),o=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(o).concat([r]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,i=0;i<e.length;i++)if(e[i].identifier===n){t=i;break}return t}function i(n,i){for(var r={},o=[],d=0;d<n.length;d++){var A=n[d],s=i.base?A[0]+i.base:A[0],l=r[s]||0,c="".concat(s," ").concat(l);r[s]=l+1;var u=t(c),p={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var m=a(p,i);i.byIndex=d,e.splice(d,0,{identifier:c,updater:m,references:1})}o.push(c)}return o}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var r=i(n=n||[],a=a||{});return function(n){n=n||[];for(var o=0;o<r.length;o++){var d=t(r[o]);e[d].references--}for(var A=i(n,a),s=0;s<r.length;s++){var l=t(r[s]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}r=A}}},569:n=>{var e={};n.exports=function(n,t){var i=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var i="";t.supports&&(i+="@supports (".concat(t.supports,") {")),t.media&&(i+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(i+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),i+=t.css,a&&(i+="}"),t.media&&(i+="}"),t.supports&&(i+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleTagTransform(i,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(i){var a=e[i];if(void 0!==a)return a.exports;var r=e[i]={id:i,exports:{}};return n[i](r,r.exports,t),r.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var i in e)t.o(e,i)&&!t.o(n,i)&&Object.defineProperty(n,i,{enumerable:!0,get:e[i]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var i=e.getElementsByTagName("script");i.length&&(n=i[i.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{const n=t.p+"18dc9c4ac2d548f2d533.png",e=t.p+"47162542c890210f6559.png",i=t.p+"d9b992e1e15f33c82182.png";function a(n,e){if(e.length<n)throw new TypeError(n+" argument"+(n>1?"s":"")+" required, but only "+e.length+" present")}function r(n){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},r(n)}function o(n){return a(1,arguments),n instanceof Date||"object"===r(n)&&"[object Date]"===Object.prototype.toString.call(n)}function d(n){return d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},d(n)}function A(n){a(1,arguments);var e=Object.prototype.toString.call(n);return n instanceof Date||"object"===d(n)&&"[object Date]"===e?new Date(n.getTime()):"number"==typeof n||"[object Number]"===e?new Date(n):("string"!=typeof n&&"[object String]"!==e||"undefined"==typeof console||(console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments"),console.warn((new Error).stack)),new Date(NaN))}function s(n){if(a(1,arguments),!o(n)&&"number"!=typeof n)return!1;var e=A(n);return!isNaN(Number(e))}function l(n){if(null===n||!0===n||!1===n)return NaN;var e=Number(n);return isNaN(e)?e:e<0?Math.ceil(e):Math.floor(e)}function c(n,e){a(2,arguments);var t=A(n).getTime(),i=l(e);return new Date(t+i)}function u(n,e){a(2,arguments);var t=l(e);return c(n,-t)}var p=864e5;function m(n){a(1,arguments);var e=1,t=A(n),i=t.getUTCDay(),r=(i<e?7:0)+i-e;return t.setUTCDate(t.getUTCDate()-r),t.setUTCHours(0,0,0,0),t}function h(n){a(1,arguments);var e=A(n),t=e.getUTCFullYear(),i=new Date(0);i.setUTCFullYear(t+1,0,4),i.setUTCHours(0,0,0,0);var r=m(i),o=new Date(0);o.setUTCFullYear(t,0,4),o.setUTCHours(0,0,0,0);var d=m(o);return e.getTime()>=r.getTime()?t+1:e.getTime()>=d.getTime()?t:t-1}function f(n){a(1,arguments);var e=h(n),t=new Date(0);t.setUTCFullYear(e,0,4),t.setUTCHours(0,0,0,0);var i=m(t);return i}var C=6048e5,g={};function x(){return g}function B(n,e){var t,i,r,o,d,s,c,u;a(1,arguments);var p=x(),m=l(null!==(t=null!==(i=null!==(r=null!==(o=null==e?void 0:e.weekStartsOn)&&void 0!==o?o:null==e||null===(d=e.locale)||void 0===d||null===(s=d.options)||void 0===s?void 0:s.weekStartsOn)&&void 0!==r?r:p.weekStartsOn)&&void 0!==i?i:null===(c=p.locale)||void 0===c||null===(u=c.options)||void 0===u?void 0:u.weekStartsOn)&&void 0!==t?t:0);if(!(m>=0&&m<=6))throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");var h=A(n),f=h.getUTCDay(),C=(f<m?7:0)+f-m;return h.setUTCDate(h.getUTCDate()-C),h.setUTCHours(0,0,0,0),h}function I(n,e){var t,i,r,o,d,s,c,u;a(1,arguments);var p=A(n),m=p.getUTCFullYear(),h=x(),f=l(null!==(t=null!==(i=null!==(r=null!==(o=null==e?void 0:e.firstWeekContainsDate)&&void 0!==o?o:null==e||null===(d=e.locale)||void 0===d||null===(s=d.options)||void 0===s?void 0:s.firstWeekContainsDate)&&void 0!==r?r:h.firstWeekContainsDate)&&void 0!==i?i:null===(c=h.locale)||void 0===c||null===(u=c.options)||void 0===u?void 0:u.firstWeekContainsDate)&&void 0!==t?t:1);if(!(f>=1&&f<=7))throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");var C=new Date(0);C.setUTCFullYear(m+1,0,f),C.setUTCHours(0,0,0,0);var g=B(C,e),I=new Date(0);I.setUTCFullYear(m,0,f),I.setUTCHours(0,0,0,0);var b=B(I,e);return p.getTime()>=g.getTime()?m+1:p.getTime()>=b.getTime()?m:m-1}function b(n,e){var t,i,r,o,d,A,s,c;a(1,arguments);var u=x(),p=l(null!==(t=null!==(i=null!==(r=null!==(o=null==e?void 0:e.firstWeekContainsDate)&&void 0!==o?o:null==e||null===(d=e.locale)||void 0===d||null===(A=d.options)||void 0===A?void 0:A.firstWeekContainsDate)&&void 0!==r?r:u.firstWeekContainsDate)&&void 0!==i?i:null===(s=u.locale)||void 0===s||null===(c=s.options)||void 0===c?void 0:c.firstWeekContainsDate)&&void 0!==t?t:1),m=I(n,e),h=new Date(0);h.setUTCFullYear(m,0,p),h.setUTCHours(0,0,0,0);var f=B(h,e);return f}var y=6048e5;function v(n,e){for(var t=n<0?"-":"",i=Math.abs(n).toString();i.length<e;)i="0"+i;return t+i}const w=function(n,e){var t=n.getUTCFullYear(),i=t>0?t:1-t;return v("yy"===e?i%100:i,e.length)},k=function(n,e){var t=n.getUTCMonth();return"M"===e?String(t+1):v(t+1,2)},E=function(n,e){return v(n.getUTCDate(),e.length)},S=function(n,e){return v(n.getUTCHours()%12||12,e.length)},L=function(n,e){return v(n.getUTCHours(),e.length)},T=function(n,e){return v(n.getUTCMinutes(),e.length)},Y=function(n,e){return v(n.getUTCSeconds(),e.length)},j=function(n,e){var t=e.length,i=n.getUTCMilliseconds();return v(Math.floor(i*Math.pow(10,t-3)),e.length)};var M={G:function(n,e,t){var i=n.getUTCFullYear()>0?1:0;switch(e){case"G":case"GG":case"GGG":return t.era(i,{width:"abbreviated"});case"GGGGG":return t.era(i,{width:"narrow"});default:return t.era(i,{width:"wide"})}},y:function(n,e,t){if("yo"===e){var i=n.getUTCFullYear(),a=i>0?i:1-i;return t.ordinalNumber(a,{unit:"year"})}return w(n,e)},Y:function(n,e,t,i){var a=I(n,i),r=a>0?a:1-a;return"YY"===e?v(r%100,2):"Yo"===e?t.ordinalNumber(r,{unit:"year"}):v(r,e.length)},R:function(n,e){return v(h(n),e.length)},u:function(n,e){return v(n.getUTCFullYear(),e.length)},Q:function(n,e,t){var i=Math.ceil((n.getUTCMonth()+1)/3);switch(e){case"Q":return String(i);case"QQ":return v(i,2);case"Qo":return t.ordinalNumber(i,{unit:"quarter"});case"QQQ":return t.quarter(i,{width:"abbreviated",context:"formatting"});case"QQQQQ":return t.quarter(i,{width:"narrow",context:"formatting"});default:return t.quarter(i,{width:"wide",context:"formatting"})}},q:function(n,e,t){var i=Math.ceil((n.getUTCMonth()+1)/3);switch(e){case"q":return String(i);case"qq":return v(i,2);case"qo":return t.ordinalNumber(i,{unit:"quarter"});case"qqq":return t.quarter(i,{width:"abbreviated",context:"standalone"});case"qqqqq":return t.quarter(i,{width:"narrow",context:"standalone"});default:return t.quarter(i,{width:"wide",context:"standalone"})}},M:function(n,e,t){var i=n.getUTCMonth();switch(e){case"M":case"MM":return k(n,e);case"Mo":return t.ordinalNumber(i+1,{unit:"month"});case"MMM":return t.month(i,{width:"abbreviated",context:"formatting"});case"MMMMM":return t.month(i,{width:"narrow",context:"formatting"});default:return t.month(i,{width:"wide",context:"formatting"})}},L:function(n,e,t){var i=n.getUTCMonth();switch(e){case"L":return String(i+1);case"LL":return v(i+1,2);case"Lo":return t.ordinalNumber(i+1,{unit:"month"});case"LLL":return t.month(i,{width:"abbreviated",context:"standalone"});case"LLLLL":return t.month(i,{width:"narrow",context:"standalone"});default:return t.month(i,{width:"wide",context:"standalone"})}},w:function(n,e,t,i){var r=function(n,e){a(1,arguments);var t=A(n),i=B(t,e).getTime()-b(t,e).getTime();return Math.round(i/y)+1}(n,i);return"wo"===e?t.ordinalNumber(r,{unit:"week"}):v(r,e.length)},I:function(n,e,t){var i=function(n){a(1,arguments);var e=A(n),t=m(e).getTime()-f(e).getTime();return Math.round(t/C)+1}(n);return"Io"===e?t.ordinalNumber(i,{unit:"week"}):v(i,e.length)},d:function(n,e,t){return"do"===e?t.ordinalNumber(n.getUTCDate(),{unit:"date"}):E(n,e)},D:function(n,e,t){var i=function(n){a(1,arguments);var e=A(n),t=e.getTime();e.setUTCMonth(0,1),e.setUTCHours(0,0,0,0);var i=e.getTime(),r=t-i;return Math.floor(r/p)+1}(n);return"Do"===e?t.ordinalNumber(i,{unit:"dayOfYear"}):v(i,e.length)},E:function(n,e,t){var i=n.getUTCDay();switch(e){case"E":case"EE":case"EEE":return t.day(i,{width:"abbreviated",context:"formatting"});case"EEEEE":return t.day(i,{width:"narrow",context:"formatting"});case"EEEEEE":return t.day(i,{width:"short",context:"formatting"});default:return t.day(i,{width:"wide",context:"formatting"})}},e:function(n,e,t,i){var a=n.getUTCDay(),r=(a-i.weekStartsOn+8)%7||7;switch(e){case"e":return String(r);case"ee":return v(r,2);case"eo":return t.ordinalNumber(r,{unit:"day"});case"eee":return t.day(a,{width:"abbreviated",context:"formatting"});case"eeeee":return t.day(a,{width:"narrow",context:"formatting"});case"eeeeee":return t.day(a,{width:"short",context:"formatting"});default:return t.day(a,{width:"wide",context:"formatting"})}},c:function(n,e,t,i){var a=n.getUTCDay(),r=(a-i.weekStartsOn+8)%7||7;switch(e){case"c":return String(r);case"cc":return v(r,e.length);case"co":return t.ordinalNumber(r,{unit:"day"});case"ccc":return t.day(a,{width:"abbreviated",context:"standalone"});case"ccccc":return t.day(a,{width:"narrow",context:"standalone"});case"cccccc":return t.day(a,{width:"short",context:"standalone"});default:return t.day(a,{width:"wide",context:"standalone"})}},i:function(n,e,t){var i=n.getUTCDay(),a=0===i?7:i;switch(e){case"i":return String(a);case"ii":return v(a,e.length);case"io":return t.ordinalNumber(a,{unit:"day"});case"iii":return t.day(i,{width:"abbreviated",context:"formatting"});case"iiiii":return t.day(i,{width:"narrow",context:"formatting"});case"iiiiii":return t.day(i,{width:"short",context:"formatting"});default:return t.day(i,{width:"wide",context:"formatting"})}},a:function(n,e,t){var i=n.getUTCHours()/12>=1?"pm":"am";switch(e){case"a":case"aa":return t.dayPeriod(i,{width:"abbreviated",context:"formatting"});case"aaa":return t.dayPeriod(i,{width:"abbreviated",context:"formatting"}).toLowerCase();case"aaaaa":return t.dayPeriod(i,{width:"narrow",context:"formatting"});default:return t.dayPeriod(i,{width:"wide",context:"formatting"})}},b:function(n,e,t){var i,a=n.getUTCHours();switch(i=12===a?"noon":0===a?"midnight":a/12>=1?"pm":"am",e){case"b":case"bb":return t.dayPeriod(i,{width:"abbreviated",context:"formatting"});case"bbb":return t.dayPeriod(i,{width:"abbreviated",context:"formatting"}).toLowerCase();case"bbbbb":return t.dayPeriod(i,{width:"narrow",context:"formatting"});default:return t.dayPeriod(i,{width:"wide",context:"formatting"})}},B:function(n,e,t){var i,a=n.getUTCHours();switch(i=a>=17?"evening":a>=12?"afternoon":a>=4?"morning":"night",e){case"B":case"BB":case"BBB":return t.dayPeriod(i,{width:"abbreviated",context:"formatting"});case"BBBBB":return t.dayPeriod(i,{width:"narrow",context:"formatting"});default:return t.dayPeriod(i,{width:"wide",context:"formatting"})}},h:function(n,e,t){if("ho"===e){var i=n.getUTCHours()%12;return 0===i&&(i=12),t.ordinalNumber(i,{unit:"hour"})}return S(n,e)},H:function(n,e,t){return"Ho"===e?t.ordinalNumber(n.getUTCHours(),{unit:"hour"}):L(n,e)},K:function(n,e,t){var i=n.getUTCHours()%12;return"Ko"===e?t.ordinalNumber(i,{unit:"hour"}):v(i,e.length)},k:function(n,e,t){var i=n.getUTCHours();return 0===i&&(i=24),"ko"===e?t.ordinalNumber(i,{unit:"hour"}):v(i,e.length)},m:function(n,e,t){return"mo"===e?t.ordinalNumber(n.getUTCMinutes(),{unit:"minute"}):T(n,e)},s:function(n,e,t){return"so"===e?t.ordinalNumber(n.getUTCSeconds(),{unit:"second"}):Y(n,e)},S:function(n,e){return j(n,e)},X:function(n,e,t,i){var a=(i._originalDate||n).getTimezoneOffset();if(0===a)return"Z";switch(e){case"X":return W(a);case"XXXX":case"XX":return z(a);default:return z(a,":")}},x:function(n,e,t,i){var a=(i._originalDate||n).getTimezoneOffset();switch(e){case"x":return W(a);case"xxxx":case"xx":return z(a);default:return z(a,":")}},O:function(n,e,t,i){var a=(i._originalDate||n).getTimezoneOffset();switch(e){case"O":case"OO":case"OOO":return"GMT"+U(a,":");default:return"GMT"+z(a,":")}},z:function(n,e,t,i){var a=(i._originalDate||n).getTimezoneOffset();switch(e){case"z":case"zz":case"zzz":return"GMT"+U(a,":");default:return"GMT"+z(a,":")}},t:function(n,e,t,i){var a=i._originalDate||n;return v(Math.floor(a.getTime()/1e3),e.length)},T:function(n,e,t,i){return v((i._originalDate||n).getTime(),e.length)}};function U(n,e){var t=n>0?"-":"+",i=Math.abs(n),a=Math.floor(i/60),r=i%60;if(0===r)return t+String(a);var o=e||"";return t+String(a)+o+v(r,2)}function W(n,e){return n%60==0?(n>0?"-":"+")+v(Math.abs(n)/60,2):z(n,e)}function z(n,e){var t=e||"",i=n>0?"-":"+",a=Math.abs(n);return i+v(Math.floor(a/60),2)+t+v(a%60,2)}const D=M;var P=function(n,e){switch(n){case"P":return e.date({width:"short"});case"PP":return e.date({width:"medium"});case"PPP":return e.date({width:"long"});default:return e.date({width:"full"})}},q=function(n,e){switch(n){case"p":return e.time({width:"short"});case"pp":return e.time({width:"medium"});case"ppp":return e.time({width:"long"});default:return e.time({width:"full"})}};const N={p:q,P:function(n,e){var t,i=n.match(/(P+)(p+)?/)||[],a=i[1],r=i[2];if(!r)return P(n,e);switch(a){case"P":t=e.dateTime({width:"short"});break;case"PP":t=e.dateTime({width:"medium"});break;case"PPP":t=e.dateTime({width:"long"});break;default:t=e.dateTime({width:"full"})}return t.replace("{{date}}",P(a,e)).replace("{{time}}",q(r,e))}};function Z(n){var e=new Date(Date.UTC(n.getFullYear(),n.getMonth(),n.getDate(),n.getHours(),n.getMinutes(),n.getSeconds(),n.getMilliseconds()));return e.setUTCFullYear(n.getFullYear()),n.getTime()-e.getTime()}var O=["D","DD"],R=["YY","YYYY"];function H(n){return-1!==O.indexOf(n)}function Q(n){return-1!==R.indexOf(n)}function F(n,e,t){if("YYYY"===n)throw new RangeError("Use `yyyy` instead of `YYYY` (in `".concat(e,"`) for formatting years to the input `").concat(t,"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));if("YY"===n)throw new RangeError("Use `yy` instead of `YY` (in `".concat(e,"`) for formatting years to the input `").concat(t,"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));if("D"===n)throw new RangeError("Use `d` instead of `D` (in `".concat(e,"`) for formatting days of the month to the input `").concat(t,"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));if("DD"===n)throw new RangeError("Use `dd` instead of `DD` (in `".concat(e,"`) for formatting days of the month to the input `").concat(t,"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"))}var X={lessThanXSeconds:{one:"less than a second",other:"less than {{count}} seconds"},xSeconds:{one:"1 second",other:"{{count}} seconds"},halfAMinute:"half a minute",lessThanXMinutes:{one:"less than a minute",other:"less than {{count}} minutes"},xMinutes:{one:"1 minute",other:"{{count}} minutes"},aboutXHours:{one:"about 1 hour",other:"about {{count}} hours"},xHours:{one:"1 hour",other:"{{count}} hours"},xDays:{one:"1 day",other:"{{count}} days"},aboutXWeeks:{one:"about 1 week",other:"about {{count}} weeks"},xWeeks:{one:"1 week",other:"{{count}} weeks"},aboutXMonths:{one:"about 1 month",other:"about {{count}} months"},xMonths:{one:"1 month",other:"{{count}} months"},aboutXYears:{one:"about 1 year",other:"about {{count}} years"},xYears:{one:"1 year",other:"{{count}} years"},overXYears:{one:"over 1 year",other:"over {{count}} years"},almostXYears:{one:"almost 1 year",other:"almost {{count}} years"}};function G(n){return function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.width?String(e.width):n.defaultWidth,i=n.formats[t]||n.formats[n.defaultWidth];return i}}const J={date:G({formats:{full:"EEEE, MMMM do, y",long:"MMMM do, y",medium:"MMM d, y",short:"MM/dd/yyyy"},defaultWidth:"full"}),time:G({formats:{full:"h:mm:ss a zzzz",long:"h:mm:ss a z",medium:"h:mm:ss a",short:"h:mm a"},defaultWidth:"full"}),dateTime:G({formats:{full:"{{date}} 'at' {{time}}",long:"{{date}} 'at' {{time}}",medium:"{{date}}, {{time}}",short:"{{date}}, {{time}}"},defaultWidth:"full"})};var V={lastWeek:"'last' eeee 'at' p",yesterday:"'yesterday at' p",today:"'today at' p",tomorrow:"'tomorrow at' p",nextWeek:"eeee 'at' p",other:"P"};function _(n){return function(e,t){var i;if("formatting"===(null!=t&&t.context?String(t.context):"standalone")&&n.formattingValues){var a=n.defaultFormattingWidth||n.defaultWidth,r=null!=t&&t.width?String(t.width):a;i=n.formattingValues[r]||n.formattingValues[a]}else{var o=n.defaultWidth,d=null!=t&&t.width?String(t.width):n.defaultWidth;i=n.values[d]||n.values[o]}return i[n.argumentCallback?n.argumentCallback(e):e]}}const $={ordinalNumber:function(n,e){var t=Number(n),i=t%100;if(i>20||i<10)switch(i%10){case 1:return t+"st";case 2:return t+"nd";case 3:return t+"rd"}return t+"th"},era:_({values:{narrow:["B","A"],abbreviated:["BC","AD"],wide:["Before Christ","Anno Domini"]},defaultWidth:"wide"}),quarter:_({values:{narrow:["1","2","3","4"],abbreviated:["Q1","Q2","Q3","Q4"],wide:["1st quarter","2nd quarter","3rd quarter","4th quarter"]},defaultWidth:"wide",argumentCallback:function(n){return n-1}}),month:_({values:{narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],abbreviated:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],wide:["January","February","March","April","May","June","July","August","September","October","November","December"]},defaultWidth:"wide"}),day:_({values:{narrow:["S","M","T","W","T","F","S"],short:["Su","Mo","Tu","We","Th","Fr","Sa"],abbreviated:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],wide:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},defaultWidth:"wide"}),dayPeriod:_({values:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"}},defaultWidth:"wide",formattingValues:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"}},defaultFormattingWidth:"wide"})};function K(n){return function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=t.width,a=i&&n.matchPatterns[i]||n.matchPatterns[n.defaultMatchWidth],r=e.match(a);if(!r)return null;var o,d=r[0],A=i&&n.parsePatterns[i]||n.parsePatterns[n.defaultParseWidth],s=Array.isArray(A)?en(A,(function(n){return n.test(d)})):nn(A,(function(n){return n.test(d)}));o=n.valueCallback?n.valueCallback(s):s,o=t.valueCallback?t.valueCallback(o):o;var l=e.slice(d.length);return{value:o,rest:l}}}function nn(n,e){for(var t in n)if(n.hasOwnProperty(t)&&e(n[t]))return t}function en(n,e){for(var t=0;t<n.length;t++)if(e(n[t]))return t}var tn,an={ordinalNumber:(tn={matchPattern:/^(\d+)(th|st|nd|rd)?/i,parsePattern:/\d+/i,valueCallback:function(n){return parseInt(n,10)}},function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t=n.match(tn.matchPattern);if(!t)return null;var i=t[0],a=n.match(tn.parsePattern);if(!a)return null;var r=tn.valueCallback?tn.valueCallback(a[0]):a[0];r=e.valueCallback?e.valueCallback(r):r;var o=n.slice(i.length);return{value:r,rest:o}}),era:K({matchPatterns:{narrow:/^(b|a)/i,abbreviated:/^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,wide:/^(before christ|before common era|anno domini|common era)/i},defaultMatchWidth:"wide",parsePatterns:{any:[/^b/i,/^(a|c)/i]},defaultParseWidth:"any"}),quarter:K({matchPatterns:{narrow:/^[1234]/i,abbreviated:/^q[1234]/i,wide:/^[1234](th|st|nd|rd)? quarter/i},defaultMatchWidth:"wide",parsePatterns:{any:[/1/i,/2/i,/3/i,/4/i]},defaultParseWidth:"any",valueCallback:function(n){return n+1}}),month:K({matchPatterns:{narrow:/^[jfmasond]/i,abbreviated:/^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,wide:/^(january|february|march|april|may|june|july|august|september|october|november|december)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^j/i,/^f/i,/^m/i,/^a/i,/^m/i,/^j/i,/^j/i,/^a/i,/^s/i,/^o/i,/^n/i,/^d/i],any:[/^ja/i,/^f/i,/^mar/i,/^ap/i,/^may/i,/^jun/i,/^jul/i,/^au/i,/^s/i,/^o/i,/^n/i,/^d/i]},defaultParseWidth:"any"}),day:K({matchPatterns:{narrow:/^[smtwf]/i,short:/^(su|mo|tu|we|th|fr|sa)/i,abbreviated:/^(sun|mon|tue|wed|thu|fri|sat)/i,wide:/^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^s/i,/^m/i,/^t/i,/^w/i,/^t/i,/^f/i,/^s/i],any:[/^su/i,/^m/i,/^tu/i,/^w/i,/^th/i,/^f/i,/^sa/i]},defaultParseWidth:"any"}),dayPeriod:K({matchPatterns:{narrow:/^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,any:/^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i},defaultMatchWidth:"any",parsePatterns:{any:{am:/^a/i,pm:/^p/i,midnight:/^mi/i,noon:/^no/i,morning:/morning/i,afternoon:/afternoon/i,evening:/evening/i,night:/night/i}},defaultParseWidth:"any"})};const rn={code:"en-US",formatDistance:function(n,e,t){var i,a=X[n];return i="string"==typeof a?a:1===e?a.one:a.other.replace("{{count}}",e.toString()),null!=t&&t.addSuffix?t.comparison&&t.comparison>0?"in "+i:i+" ago":i},formatLong:J,formatRelative:function(n,e,t,i){return V[n]},localize:$,match:an,options:{weekStartsOn:0,firstWeekContainsDate:1}};var on=/[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g,dn=/P+p+|P+|p+|''|'(''|[^'])+('|$)|./g,An=/^'([^]*?)'?$/,sn=/''/g,ln=/[a-zA-Z]/;function cn(n){var e=n.match(An);return e?e[1].replace(sn,"'"):n}function un(n,e){var t,i,r,o,d,s,c,u;a(1,arguments);var p=x(),m=l(null!==(t=null!==(i=null!==(r=null!==(o=null==e?void 0:e.weekStartsOn)&&void 0!==o?o:null==e||null===(d=e.locale)||void 0===d||null===(s=d.options)||void 0===s?void 0:s.weekStartsOn)&&void 0!==r?r:p.weekStartsOn)&&void 0!==i?i:null===(c=p.locale)||void 0===c||null===(u=c.options)||void 0===u?void 0:u.weekStartsOn)&&void 0!==t?t:0);if(!(m>=0&&m<=6))throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");var h=A(n),f=h.getDay(),C=(f<m?7:0)+f-m;return h.setDate(h.getDate()-C),h.setHours(0,0,0,0),h}t.p;let pn=Cn("I researched and taught academic philosophy for six years at the Universities of Oxford and Toronto. My area of expertise is Ancient Greek and Roman Philosophy, and my inquiries typically seek to understand what ancient philosophers thought was the origin and nature of objective values."),mn=Cn("You can find a sample my research in ancient philosophy here. This essay, which I presented at the Rackham Interdisciplinary Workshop in Ancient Philosophy at the University of Michigan, describes the relationship between Plato's theory of virtue, and his conception of divine law. Plato, I argue, defended the view that God's law governs virtuous conduct. It's a simple argument, but it contradicts prevailing orthodoxy in scholarship on Ancient Greek Philosophy, which holds that divine law theories of ethics first originate with the Stoics. But Plato writes in an earlier century."),hn=Cn("My other main area of interest is philosophical theories of beauty. Here is a link to a paper where I investigate Arthur Schopenhauer's understanding of what exactly human beings grasp with their minds, when they grasp that something is beautiful. I like to think that Schopenhauer is close to the truth about this issue."),fn=function(){let n=document.createElement("div");return n.classList.add("siteContent"),n}();function Cn(n){let e=document.createElement("p");return e.classList.add("contentParagraph"),e.innerHTML=n,e}fn.appendChild(pn),fn.appendChild(mn),fn.appendChild(hn),Cn("At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio."),function(n,e){let t=document.createElement("div");t.classList.add("contentBox"),t.appendChild(function(n){let e=document.createElement("h2");return e.classList.add("contentHeader"),e.textContent=n,e}("About Me")),t.appendChild(e)}(0,function(){let n=document.createElement("div");return n.classList.add("siteContent"),n.appendChild(Cn("Hi – I’m Taylor.")),n.appendChild(Cn("I have a bachelor’s degree in Classical Languages (Ancient Greek and Latin) from the University of Michigan, and a master’s degree in Ancient Philosophy from the University of Oxford. My master's was funded through the <a href='https://classicalstudies.org/awards-and-fellowships/lionel-pearson-fellowship-award-winners'>Lionel Pearson Fellowship</a>, which awards one North American student full tuition for year of graduate study in the. I also did five years of graduate work at the University of Toronto, where I researched and taught in the field of Philosophy.")),n.appendChild(Cn("If you’re interested in some of my philosophical work, you can sample my writing here and my teaching here.")),n.appendChild(Cn("I'm also a developer proficient in JavaScript. I do work on the front-end, but I'm in the process of achieving proficiency in the back-end as well. You can check out a portfolio <a href='javascript.html'>here</a>.")),n}());var gn=t(379),xn=t.n(gn),Bn=t(795),In=t.n(Bn),bn=t(569),yn=t.n(bn),vn=t(565),wn=t.n(vn),kn=t(216),En=t.n(kn),Sn=t(589),Ln=t.n(Sn),Tn=t(426),Yn={};Yn.styleTagTransform=Ln(),Yn.setAttributes=wn(),Yn.insert=yn().bind(null,"head"),Yn.domAPI=In(),Yn.insertStyleElement=En(),xn()(Tn.Z,Yn),Tn.Z&&Tn.Z.locals&&Tn.Z.locals;const jn=t.p+"3a8a405822205a5f6974.png",Mn=new Image;Mn.src=jn,Mn.setAttribute("id","weatherIcon"),document.createElement("div").setAttribute("id","searchDisplay"),document.createElement("div").classList.add("searchResultContainer"),document.createElement("h2");let Un=document.createElement("p");function Wn(){window.location="index.html"}function zn(e,t){const i=document.createElement("div");if("y"==t){const t=document.createElement("div");t.classList.add("sidebarIntegratedItem"),t.appendChild(Dn(e)),t.appendChild(function(){const e=document.createElement("div");return e.classList.add("sideBarItemRightComponent"),e.appendChild(function(){const e=document.createElement("button");e.classList.add("sideBarRightComponentButtonContainer");const t=new Image;return t.src=n,t.classList.add("sideBarRightComponentButton"),t.addEventListener("click",(()=>function(n,e){let t=document.getElementById("content");const i=document.createElement("div");i.classList.add("newListCard"),i.appendChild(function(){const n=document.createElement("label");n.setAttribute("for","listName"),n.setAttribute("id","listNameLabel"),n.textContent="Name Your List: ";const e=document.createElement("div");e.classList.add("cardTextBorder");const t=document.createElement("input");return t.classList.add("cardInputText"),t.setAttribute("id","listName"),e.appendChild(n),e.appendChild(t),e}()),i.appendChild(function(n,e){const t=document.createElement("div");return t.classList.add("cardButtonIntegrator"),t.appendChild(Xn(n)),t.firstChild.setAttribute("id","listCancel"),t.appendChild(Xn(e)),t.lastChild.setAttribute("id","listAdd"),t}("Cancel","Create")),i.lastChild.lastChild.addEventListener("click",(n=>{let e=i.firstChild.lastChild.value;if(""==e)return;!function(n){Vn.push(function(n){return{name:n}}(n))}(e);let a=t.firstChild.lastChild.lastChild;a.textContent="",a.appendChild(Fn()),i.remove(),qn()})),i.lastChild.firstChild.addEventListener("click",(n=>{i.lastChild.firstChild,i.remove()})),null!==document.body.nextSibling&&document.body.nextSibling.remove(),document.body.after(i)}())),e.appendChild(t),e}()),e}()),i.appendChild(t),i.appendChild(function(){const n=document.createElement("div");return n.classList.add("listContainer"),n}()),i.classList.add("sidebarIntegratedItem2")}else{i.appendChild(Dn(e)),i.classList.add("sidebarIntegratedItem");const n=document.createElement("div");n.classList.add("SideBarItemRightComponent"),i.appendChild(n)}return i}function Dn(n){const e=document.createElement("div");return e.classList.add("SideBarItemLeftComponent"),e.appendChild(function(n){const e=document.createElement("h3");return e.classList.add("sideBarHeader"),e.textContent=n,e}(n)),e}function Pn(n){let e=document.getElementById("content");const t=document.createElement("div");t.classList.add("mainContainer"),t.setAttribute("id","mainContainer"),e.lastChild.remove(),t.appendChild(function(n){const e=document.createElement("div");return e.classList.add("integratedItem"),e.appendChild(Rn(n)),e.appendChild(function(n){const e=document.createElement("div");e.classList.add("listContentContainer");const t=function(n){let e=[];return Gn.filter((function(t){t.list==n&&e.push(t)})),e}(n);return t.forEach((n=>{e.appendChild(Hn(n.title,n.date))})),e}(n)),e}(n)),e.appendChild(t);let i=e.firstChild.lastChild.lastChild;1==i.hasChildNodes()&&i.firstChild.remove(),i.appendChild(Fn()),qn(),function(){let n=document.getElementById("content"),e=n.firstChild.firstChild.nextSibling,t=n.firstChild.firstChild.nextSibling.nextSibling,i=n.firstChild.firstChild.nextSibling.nextSibling.nextSibling;e.classList.contains("sidebarItemSelected")&&e.classList.remove("sidebarItemSelected")&&e.classList.add("sidebarIntegratedItem"),t.classList.contains("sidebarItemSelected")&&t.classList.remove("sidebarItemSelected")&&t.classList.add("sidebarIntegratedItem"),i.classList.contains("sidebarItemSelected")&&i.classList.remove("sidebarItemSelected")&&i.classList.add("sidebarIntegratedItem")}()}function qn(){let n=document.querySelectorAll(".sidebarListItemContainer"),e=document.querySelectorAll("sidebarListItemContainerSelected");for(let t=0;t<e.length;t++){let e=n[t];document.getElementById("mainContainer"),e.classList.remove("sidebarListItemContainerSelected"),e.classList.add("sidebarListItemContainer")}for(let e=0;e<n.length;e++){let t=n[e],i=document.querySelector(".mainContainer");t.firstChild.textContent==i.firstChild.firstChild.textContent?(t.classList.remove("sidebarListItemContainer"),t.classList.add("sidebarListItemContainerSelected")):(t.classList.remove("sidebarListItemContainerSelected"),t.classList.add("sidebarListItemContainer"))}}function Nn(){let n=document.getElementById("content");n.lastChild.remove();const e=document.createElement("div");e.classList.add("mainContainer"),e.appendChild(function(){const n=document.createElement("div");return n.classList.add("integratedItem"),n.appendChild(Rn("All Tasks")),n.appendChild(function(){const n=document.createElement("div");return n.classList.add("listContentContainer"),Gn.sort((function(n,e){var t=new Date(n.date),i=new Date(e.date);return t<i?-1:t>i?1:0})).forEach((e=>{n.appendChild(Hn(e.title,e.date))})),n}()),n}()),n.appendChild(e);const t=n.firstChild.firstChild.nextSibling,i=n.firstChild.firstChild.nextSibling.nextSibling,a=n.firstChild.firstChild.nextSibling.nextSibling.nextSibling;t.classList.add("sidebarItemSelected"),i.classList.contains("sidebarItemSelected")&&i.classList.remove("sidebarItemSelected")&&i.classList.add("sidebarIntegratedItem"),a.classList.contains("sidebarItemSelected")&&a.classList.remove("sidebarItemSelected")&&a.classList.add("sidebarIntegratedItem");let r=n.firstChild.lastChild.lastChild;1==r.hasChildNodes()&&r.firstChild.remove(),r.appendChild(Fn()),qn()}function Zn(){let n=document.getElementById("content");n.lastChild.remove();let e=document.createElement("div");e.classList.add("mainContainer"),e.appendChild(function(){const n=document.createElement("div");return n.classList.add("integratedItem"),n.appendChild(Rn("Today")),n.appendChild(function(){const n=document.createElement("div");n.classList.add("listContentContainer");const e=function(){let n=function(n,e,t){var i,r,o,d,c,p,m,h,f,C,g,B,I,b,y,v,w,k;a(2,arguments);var E=String(e),S=x(),L=null!==(i=null!==(r=null==t?void 0:t.locale)&&void 0!==r?r:S.locale)&&void 0!==i?i:rn,T=l(null!==(o=null!==(d=null!==(c=null!==(p=null==t?void 0:t.firstWeekContainsDate)&&void 0!==p?p:null==t||null===(m=t.locale)||void 0===m||null===(h=m.options)||void 0===h?void 0:h.firstWeekContainsDate)&&void 0!==c?c:S.firstWeekContainsDate)&&void 0!==d?d:null===(f=S.locale)||void 0===f||null===(C=f.options)||void 0===C?void 0:C.firstWeekContainsDate)&&void 0!==o?o:1);if(!(T>=1&&T<=7))throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");var Y=l(null!==(g=null!==(B=null!==(I=null!==(b=null==t?void 0:t.weekStartsOn)&&void 0!==b?b:null==t||null===(y=t.locale)||void 0===y||null===(v=y.options)||void 0===v?void 0:v.weekStartsOn)&&void 0!==I?I:S.weekStartsOn)&&void 0!==B?B:null===(w=S.locale)||void 0===w||null===(k=w.options)||void 0===k?void 0:k.weekStartsOn)&&void 0!==g?g:0);if(!(Y>=0&&Y<=6))throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");if(!L.localize)throw new RangeError("locale must contain localize property");if(!L.formatLong)throw new RangeError("locale must contain formatLong property");var j=A(n);if(!s(j))throw new RangeError("Invalid time value");var M=Z(j),U=u(j,M),W={firstWeekContainsDate:T,weekStartsOn:Y,locale:L,_originalDate:j},z=E.match(dn).map((function(n){var e=n[0];return"p"===e||"P"===e?(0,N[e])(n,L.formatLong):n})).join("").match(on).map((function(i){if("''"===i)return"'";var a=i[0];if("'"===a)return cn(i);var r=D[a];if(r)return null!=t&&t.useAdditionalWeekYearTokens||!Q(i)||F(i,e,String(n)),null!=t&&t.useAdditionalDayOfYearTokens||!H(i)||F(i,e,String(n)),r(U,i,L.localize,W);if(a.match(ln))throw new RangeError("Format string contains an unescaped latin alphabet character `"+a+"`");return i})).join("");return z}(new Date,"yyyy-LL-dd");return Gn.filter((function(e){if(n==e.date)return e}))}();return console.log("loadTodayTasks test"),console.log(e),e.forEach((e=>{n.appendChild(Hn(e.title,e.date))})),n}()),n}()),n.appendChild(e);let t=n.firstChild.firstChild.nextSibling,i=n.firstChild.firstChild.nextSibling.nextSibling,r=n.firstChild.firstChild.nextSibling.nextSibling.nextSibling;i.classList.add("sidebarItemSelected"),t.classList.contains("sidebarItemSelected")&&t.classList.remove("sidebarItemSelected")&&t.classList.add("sidebarIntegratedItem"),r.classList.contains("sidebarItemSelected")&&r.classList.remove("sidebarItemSelected")&&r.classList.add("sidebarIntegratedItem");let o=n.firstChild.lastChild.lastChild;1==o.hasChildNodes()&&o.firstChild.remove(),o.appendChild(Fn()),qn()}function On(){let n=document.getElementById("content");n.lastChild.remove();const e=document.createElement("div");e.classList.add("mainContainer"),e.appendChild(function(){const n=document.createElement("div");return n.classList.add("integratedItem"),n.appendChild(Rn("This Week")),n.appendChild(function(){const n=document.createElement("div");return n.classList.add("listContentContainer"),function(){const n=Gn.filter((function(n){if(function(n,e,t){a(2,arguments);var i=un(n,t),r=un(e,t);return i.getTime()===r.getTime()}(new Date,new Date(n.date.replace("-","/"))))return n}));return n}().forEach((e=>{n.appendChild(Hn(e.title,e.date))})),n}()),n}()),n.appendChild(e);let t=n.firstChild.firstChild.nextSibling,i=n.firstChild.firstChild.nextSibling.nextSibling;n.firstChild.firstChild.nextSibling.nextSibling.nextSibling.classList.add("sidebarItemSelected"),t.classList.contains("sidebarItemSelected")&&t.classList.remove("sidebarItemSelected")&&t.classList.add("sidebarIntegratedItem"),i.classList.contains("sidebarItemSelected")&&i.classList.remove("sidebarItemSelected")&&i.classList.add("sidebarIntegratedItem");let r=n.firstChild.lastChild.lastChild;1==r.hasChildNodes()&&r.firstChild.remove(),r.appendChild(Fn()),qn()}function Rn(n){const e=document.createElement("div");e.classList.add("titleContainer");const t=document.createElement("h1");return t.classList.add("titleHeader"),t.textContent=n,e.appendChild(t),e}function Hn(n,e){const t=document.createElement("div");return t.classList.add("listItemContainer"),t.appendChild(function(n){const e=document.createElement("div");e.classList.add("leftListItem");const t=document.createElement("div");return t.textContent=n,e.appendChild(t),e}(n)),t.appendChild(function(n){const e=document.createElement("div");return e.classList.add("listItemIconContainer"),e.appendChild(function(n){let e=document.createElement("div");return e.classList.add("listItemDate"),e.textContent=n,e}(n)),e.appendChild(function(){const n=document.createElement("button");n.addEventListener("click",(()=>{n.parentNode.parentNode.remove();let e=n.parentNode.parentNode.firstChild.firstChild.textContent;Gn.find((n=>n.title==e)),Gn.indexOf(arrayItem),Gn.splice(index,1)}));const e=new Image;return e.src=i,e.classList.add("listItemIconButton"),n.appendChild(e),n}()),e}(e)),t.lastChild.firstChild.addEventListener("click",(()=>{const n=t.firstChild.firstChild.textContent;Gn.forEach((e=>{n==e.title&&Gn.splice(Gn.indexOf(e),1),t.remove()}))})),t}function Qn(n){const e=document.createElement("button");e.classList.add("taskCardButton");const t=document.createElement("div");return t.textContent=n,t.classList.add("taskButtonText"),e.appendChild(t),e}function Fn(){const n=document.createElement("div");return Vn.forEach((e=>{let t=document.createElement("div");t.classList.add("sidebarListItemContainer");let a=document.createElement("p");a.textContent=e.name,a.addEventListener("click",(()=>{Pn(a.textContent)})),t.appendChild(a),t.appendChild(function(){let n=document.createElement("button");n.classList.add("sidebarListIconButton"),n.addEventListener("click",(()=>{n.parentNode.remove(),function(){const e=n.parentNode.firstChild.textContent;Vn.forEach((n=>{n.name==e&&Vn.splice(Vn.indexOf(n),1)}))}()}));let e=new Image;return e.src=i,e.classList.add("sidebarListIcon"),n.appendChild(e),n}()),n.appendChild(t)})),n}function Xn(n){const e=document.createElement("button");e.classList.add("newListCardButton");const t=document.createElement("div");return t.textContent=n,e.appendChild(t),e}Un.classList.add("p-info"),Un.setAttribute("id","temp"),document.createElement("p").classList.add("p-info"),document.createElement("p").classList.add("p-info"),document.createElement("p").classList.add("p-info"),document.createElement("p").classList.add("p-info");let Gn=[];class Jn{constructor(n,e,t,i,a){this.title=n,this.date=e,this.list=t}}const Vn=[];!function(){!function(n){for(;n.firstChild;)n.removeChild(n.firstChild)}(document.body),document.body.setAttribute("id","body"),document.body.appendChild(function(){const n=document.createElement("div");return n.setAttribute("id","headerContainer"),n.appendChild(function(){const n=document.createElement("div");n.classList.add("leftHeaderContent");const t=document.createElement("p");return t.classList.add("toDo"),t.textContent="ToDoList",n.appendChild(function(){let n=new Image;return n.src=e,n.classList.add("headerIcon"),n}()),n.appendChild(t),n}()),n.appendChild(function(){let n=document.createElement("div");return n.setAttribute("id","organizerRightHeaderContent"),n.appendChild(function(){let n=document.createElement("div");return n.textContent="Exit to Website",n}()),n.appendChild(function(){let n=document.createElement("button");return n.textContent="x",n.setAttribute("id","removeOrgnizerBtn"),n.addEventListener("click",Wn),n}()),n}()),n}());let n=document.createElement("div");n.setAttribute("id","content"),document.body.appendChild(n),n.appendChild(function(){const n=document.createElement("div");return n.classList.add("sidebar"),n.appendChild(function(){const n=document.createElement("div");n.classList.add("sidebarAddTaskButton");const e=document.createElement("button");return e.classList.add("createTask"),e.textContent="+ Create a Task",e.addEventListener("click",(()=>function(){const n=document.createElement("div");n.classList.add("newTaskCard"),n.appendChild(function(){const n=document.createElement("div");n.classList.add("taskCardTextBorder");const e=document.createElement("div");return e.classList.add("taskInfoFirstRow"),e.appendChild(function(){const n=document.createElement("div");n.classList.add("taskInfoItemContainer");const e=document.createElement("input");e.classList.add("cardInputText"),e.setAttribute("id","title");const t=document.createElement("label");return t.setAttribute("for","title"),t.textContent="Task: ",n.appendChild(t),n.appendChild(e),n}()),e.appendChild(function(){const n=document.createElement("div");n.classList.add("taskInfoItemContainer");const e=document.createElement("input");e.classList.add("cardInputText"),e.setAttribute("type","date"),e.setAttribute("id","date");const t=document.createElement("label");return t.setAttribute("type","date"),t.setAttribute("for","date"),t.textContent="Date: ",n.appendChild(t),n.appendChild(e),n}()),n.appendChild(e),n.appendChild(function(){const n=document.createElement("div");n.classList.add("taskInfoItemContainer");const e=document.createElement("label");e.setAttribute("for","cardInput"),e.textContent="List: ";const t=document.createElement("select");return t.classList.add("cardInputText"),t.setAttribute("id","list"),Vn.forEach((n=>{const e=document.createElement("option");e.innerHTML=n.name,t.appendChild(e)})),n.appendChild(e),n.appendChild(t),n}()),n}()),n.appendChild(function(n,e){const t=document.createElement("div");return t.classList.add("cardButtonIntegrator"),t.appendChild(Qn("Cancel")),t.appendChild(Qn("Add Task")),t}()),n.lastChild.firstChild.addEventListener("click",(e=>{n.remove()})),n.lastChild.firstChild.setAttribute("id","cancelTask"),n.lastChild.lastChild.addEventListener("click",(e=>{const t=document.getElementById("date"),i=document.getElementById("list"),a=document.getElementById("title");""!=a.value&&(function(n,e,t){let i=new Jn(n,e,t);Gn.push(i)}(a.value,t.value,i.value),n.remove(),function(){let n=document.getElementById("content").firstChild.nextSibling.firstChild.firstChild.firstChild.textContent;console.log("test refresh page"),console.log(n),"All Tasks"==n?Nn():"Today"==n?Zn():"This Week"==n?On():Pn(n)}())})),n.lastChild.lastChild.setAttribute("id","addTask"),null!==document.body.nextSibling&&document.body.nextSibling.remove(),document.body.after(n)}())),n.appendChild(e),n}()),n.appendChild(function(){const n=zn("All");return n.addEventListener("click",(()=>Nn())),n.setAttribute("id","all"),n}()),n.appendChild(function(){const n=zn("Today");return n.addEventListener("click",(()=>Zn())),n.setAttribute("id","today"),n}()),n.appendChild(function(){const n=zn("This Week");return n.addEventListener("click",(()=>On())),n.setAttribute("id","thisWeek"),n}()),n.appendChild(zn("Lists","y")),n}());const t=document.createElement("div");n.appendChild(t),Nn()}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,